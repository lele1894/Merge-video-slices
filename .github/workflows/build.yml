name: 构建可执行文件并发布

on:
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本号'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: 配置 Python 环境
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: 安装依赖包
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: 创建运行时钩子
      run: |
        echo 'import os' > runtime_hook.py
        echo 'import sys' >> runtime_hook.py
        echo 'if sys.platform == "win32":' >> runtime_hook.py
        echo '    if hasattr(sys, "_MEIPASS"):' >> runtime_hook.py
        echo '        os.environ["PATH"] = sys._MEIPASS + os.pathsep + os.environ["PATH"]' >> runtime_hook.py
    
    - name: 检查图标文件
      run: |
        if (Test-Path "app.ico") {
            echo "找到图标文件 app.ico"
        } else {
            echo "警告: 未找到 app.ico 文件，将使用默认图标"
        }
    
    - name: 构建独立版程序
      run: |
        echo "开始构建..."
        pyinstaller --noconfirm --onefile --windowed `
          --icon=app.ico `
          --add-data "app.ico;." `
          --add-data "LICENSE;." `
          --add-data "README.md;." `
          --name "One-click video mixing and cutting_${{ github.event.inputs.version }}" `
          --runtime-hook "runtime_hook.py" `
          "One-click video mixing and cutting.py"
        echo "构建完成，检查 dist 目录："
        dir dist
    
    - name: 创建发布版本并上传文件
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "准备创建发布版本..."
        
        # 如果标签已存在，先删除它
        gh release delete ${{ github.event.inputs.version }} --yes || true
        git push --delete origin ${{ github.event.inputs.version }} || true
        
        # 创建新的发布版本
        echo "创建发布版本..."
        gh release create ${{ github.event.inputs.version }} --title "发布 ${{ github.event.inputs.version }}" --notes "### 使用说明

        使用前请确保已安装 FFmpeg 并添加到系统环境变量。
        
        Windows 用户可以从 https://ffmpeg.org/download.html 下载 FFmpeg，
        解压后将 ffmpeg.exe 所在目录添加到系统环境变量 Path 中。"

        # 上传文件
        echo "准备上传文件..."
        dir dist
        
        echo "上传程序..."
        gh release upload ${{ github.event.inputs.version }} "./dist/One-click video mixing and cutting_${{ github.event.inputs.version }}.exe" --clobber